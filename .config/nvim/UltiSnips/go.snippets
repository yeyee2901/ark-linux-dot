snippet deferlog "defer with inline function call for debugging"
defer func($0){
	fmt.Println($1)
}($2)
endsnippet

snippet funcm "method for structs"
func (T *${1:type}) ${2:MethodName}(${3:params}) (${4:returns}){
	${5:// body}
}
endsnippet

snippet recover_func "Defered recovery function"
defer func() {
	if err := recover(); err != nil {
		${1:// fmt.Println(err)}
	}
}()
endsnippet

snippet iferr "If error which is already a meme"
if err != nil {
	${1:panic(err)}
}
endsnippet

snippet ifok "if ok / exist / error with value binding"
if ${1:val}, ok := ${2:expression} ; ok {
	$3
}
endsnippet

snippet gofun "idiomatic goroutine with done channel"
${1:doneChannel} := make(chan struct{})
go func(done chan<- struct{}) {
	defer func() {
		done <- struct{}{}
	}()
	
	${2:// do something here...}
}($1)
endsnippet

snippet deferfun "defer function"
defer func(${1:param any}){
	$3
}(${2:args})
endsnippet

snippet init "init function"
func init() {
	${1:// body}
}
endsnippet
